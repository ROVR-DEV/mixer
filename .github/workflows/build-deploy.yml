name: Deploy frontend docker image

env:
  REGISTRY: ghcr.io

on:
  push:
    branches: ['develop']

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    env:
      IMAGE_NAME: ${{ github.repository }}
      DEPLOY_FILES: docker-compose.yml

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, label) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule,pattern={{date 'YYYYMMDD-hhmmss'}}

      - name: Copy deploy configs
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.TEST_SERVER_HOST }}
          username: ${{ secrets.TEST_SERVER_USER }}
          key: ${{ secrets.TEST_SERVER_KEY }}
          source: ${{ env.DEPLOY_FILES }}
          target: ~/mixerdev
          overwrite: true

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels  }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    env:
      REPO_NAME: ${{ github.event.repository.name }}

    steps:
      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.TEST_SERVER_HOST }}
          username: ${{ secrets.TEST_SERVER_USER }}
          key: ${{ secrets.TEST_SERVER_KEY }}
          envs: REPO_NAME
          script: |
            cd mixerdev

            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${{ env.REGISTRY }} -u "${{ github.actor }}" --password-stdin

            docker compose up -d

            docker logout
